'use strict';

var each        = require('async').each
var debug       = require('debug')('metalsmith-s3read')
var _           = require('underscore')
var front	= require('front-matter')
var AWS         = require('aws-sdk')
var RSVP	= require('rsvp')

/**
 * Expose `plugin`.
 */

module.exports = plugin;

/**
 * Metalsmith plugin to retrieve content from Prismic.io and place in the file's metadata.
 *
 * @param {Object} options
 *   @property {String} url
 *   @property {String} accessToken (optional)
 * @return {Function}
 */

function plugin(config) {

    checkProperty(config, 'bucket');

    return function(files, metalsmith, done){
	var param = {};
	var param.Bucket = config['bucket'];

        // initialize the API
	var s3 = new AWS.S3();

	getS3Objects(param).then(function(data) {
		for (var index in data.Contents) {
			key = data.Contents[index].Key
			console.log(key);	
		}
	}, function (error) {
		console.error(error);
	});

	done();

	var param = {Bucket: config['bucket']};

	var response = s3.listObjects(param);
	response.send();
	console.log(response);


	//for (var index in response.data.Contents) {
	//	var obj = respnse.data.Contents[index];
	//	console.log(obj);
	//	retrieveContentForFile(obj, ctx);
	//}

	debug("metalsmith-s3read done!"); 
	done();

	function retrieveContentForFile(obj, ctx) {
		if (!obj['Key'].match('/$')) {
			var param = {};
			var file = {};
			var s3 = ctx.s3;
			var data = {};
			param.Bucket = ctx.param['Bucket'];
			param.Key = obj['Key'];

			data = s3.getObject(param);
					var parsed = front(data.Body.toString());
					console.log("Adding file: ", obj['Key'], " with attributes: ", parsed.attributes);
					file = parsed.attributes;
					file.contents = new Buffer(parsed.body);
					files[obj['Key']] = file;
		}
	}			
    }


    function checkProperty(object, property) {
        if ((object[property]) == null) {
            throw new TypeError('Missing property \'' + property + '\'. Please update the configuration settings appropriately.');
        }
    }
}
